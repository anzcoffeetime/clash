# 必读！！！
# 注意规则在满足自己需求情况下，尽量做到精简，不要过度复杂，以免影响性能。
# 跑裸核用户请自行去掉下方控制面板模块的注释。
# 机场订阅
proxy-providers:
  ssrdog:
    url: "https://4829a5468a4384b768da277dcb861c5d.cdn-163.sbs/s?t=4829a5468a4384b768da277dcb861c5d.jpg"
    type: http
    interval: 86400
    health-check:
      enable: true
      url: https://www.gstatic.com/generate_204
      interval: 300
    proxy: 直连
# 节点信息
proxies:
  - {name: 直连, type: direct, udp: true}

# 全局配置 
port: 7890
socks-port: 7891
redir-port: 7892
mixed-port: 7893
tproxy-port: 7894
allow-lan: true
bind-address: "*"
ipv6: false
unified-delay: true
tcp-concurrent: true
log-level: warning
find-process-mode: 'off'
# interface-name: en0
global-client-fingerprint: chrome
keep-alive-idle: 600
keep-alive-interval: 15
disable-keep-alive: false
profile:
  store-selected: true
  store-fake-ip: true

# 控制面板，external-ui 路径如果出现报错，根据你使用的插件进行调整，比如openclash改为： /etc/openclash/run/ui  ，裸核跑改为/etc/mihomo/run/ui
# 因容易造成新手面板启动问题，我注释掉了，需要的自行开启
#external-controller: 0.0.0.0:9090
#secret: ""
#external-ui: "/etc/mihomo/run/ui"
#external-ui-name: zashboard
#external-ui-url: "https://github.com/Zephyruso/zashboard/archive/refs/heads/gh-pages.zip"

# 嗅探
sniffer:
  enable: true
  sniff:
    HTTP:
      ports: [80, 8080-8880]
      override-destination: true
    TLS:
      ports: [443, 8443]
    QUIC:
      ports: [443, 8443]
  force-domain:
    - "+.v2ex.com"
  skip-domain:
    - "+.baidu.com"

# 入站  
tun:
  enable: true
  # system/gvisor/mixed
  stack: mixed
  dns-hijack: ["any:53", "tcp://any:53"]
  auto-route: true
  auto-redirect: true
  auto-detect-interface: true

# DNS模块
dns:
  enable: true
  listen: 0.0.0.0:1053
  ipv6: false
  respect-rules: true
  # 模式切换 redir-host / fake-ip
  enhanced-mode: fake-ip
  fake-ip-range: 28.0.0.1/8
  # 模式切换 whitelist/blacklist 
  # 黑名单模式表示如果匹配成功则不返回 Fake-IP, 白名单模式时只有匹配成功才返回 Fake-IP
  fake-ip-filter-mode: blacklist
  fake-ip-filter:
    - "+.market.xiaomi.com"
    - "time.*.com"
    - "+.msftncsi.com"
    - "+.msftconnecttest.com"
    - "rule-set:private_domain,cn_domain"
    - "+.lan"
    - "+.local"
    - geosite:private
    - geosite:cn

  # 默认 DNS 服务器列表（普通 DNS）
  default-nameserver:
    - 223.5.5.5
    - 8.8.8.8
    - 8.8.4.4
    - 1.1.1.1
    - 9.9.9.9
    - 119.29.29.29
    - 114.114.115.115
    - 223.5.5.5
    - 223.6.6.6
    - 119.29.29.29
    - 182.254.116.116
    - 180.76.76.76
    - 1.2.4.8
    - 210.2.4.8
    - 101.226.4.6
    - 218.30.118.6
    - 42.120.21.30
    - 112.124.47.27
    - 202.106.0.20
    - 202.106.196.115
    - 123.125.81.6
    - 202.96.128.86
    - 202.96.134.33
    - 115.159.146.99
    - 123.206.21.48

  # 代理下的 DNS 服务器（普通 DNS）
  proxy-server-nameserver:
    - 223.5.5.5
    - 119.29.29.29
    - 114.114.114.114
    - 1.2.4.8
    - 180.76.76.76
    - 8.8.8.8
    - 8.8.4.4
    - 1.1.1.1
    - 9.9.9.9
    - 208.67.222.222
    - 208.67.220.220
    - 168.95.1.1
    - 199.85.126.10
    - 199.85.127.10
    - 76.76.19.19
    - 94.140.14.14
    - 94.140.15.15
    - 77.88.8.8
    - 77.88.8.1
    - 156.154.70.1
    - 156.154.71.1

  # 根据规则使用特定的 DNS 服务器
  nameserver-policy:
    # 中国内网和大陆域名使用国内普通 DNS
    "rule-set:private_domain,cn_domain":
    - 223.5.5.5
    - 119.29.29.29
    - 114.114.115.115
    - 223.5.5.5
    - 223.6.6.6
    - 119.29.29.29
    - 182.254.116.116
    - 180.76.76.76
    - 1.2.4.8
    - 210.2.4.8
    - 101.226.4.6
    - 218.30.118.6
    - 42.120.21.30
    - 112.124.47.27
    - 202.106.0.20
    - 202.106.196.115
    - 123.125.81.6
    - 202.96.128.86
    - 202.96.134.33
    - 115.159.146.99
    - 123.206.21.48

    # 非中国大陆域名使用境外加密 DNS
    "rule-set:geolocation-!cn":
      - "https://dns.cloudflare.com/dns-query"
      - "https://dns.google/dns-query"
      - "https://doh.opendns.com/dns-query"
      - "https://dns.quad9.net/dns-query"
      - "https://doh1.dns.nextdns.io"
      - "https://dns.adguard.com/dns-query"
      - "https://1.1.1.1/dns-query"
      - "https://dns11.quad9.net/dns-query"
      - "https://doh.cleanbrowsing.org/doh/family-filter/"
      - "https://resolver1.dns.watch/dns-query"
      - "https://dns.rubyfish.cn/dns-query"
      - "https://dns.alidns.com/dns-query"
      - "https://jp.ssr-dns.workers.dev/dns-query"
      - "https://fi.doh.dnsbycomodo.com/dns-query"
      - "https://freedns.controld.com/basic/"
      - "https://doh.trails.dns.net/"
      - "https://cloudflare-dns.com/dns-query"
      - "https://dot.securedns.eu/dns-query"
      - "https://dns.ny.aa.net.uk/dns-query"
      - "https://family.ns.cloudflare.com/dns-query"


      # 普通的 DNS 服务器
  nameserver:
    - 223.5.5.5
    - 119.29.29.29
    - 114.114.114.114
    - 1.2.4.8
    - 180.76.76.76
    - 8.8.8.8
    - 8.8.4.4
    - 1.1.1.1
    - 9.9.9.9
    - 208.67.222.222
    - 208.67.220.220
    - 168.95.1.1
    - 199.85.126.10
    - 199.85.127.10
    - 76.76.19.19
    - 94.140.14.14
    - 94.140.15.15
    - 77.88.8.8
    - 77.88.8.1
    - 156.154.70.1
    - 156.154.71.1



pr: &pr {type: select, proxies: [🚀 默认代理, ♻️ 香港自动, ♻️ 日本自动, ♻️ 美国自动, ♻️ 新加坡自动, ♻️ 其他节点自动, ♻️ 自动选择, 🇭🇰 香港节点, 🇯🇵 日本节点, 🇺🇲 美国节点, 🌐 全部节点, 🐸 手动切换, 🔯 香港故转, 🔯 日本故转, 🔯 加坡故转, 直连, DIRECT, REJECT]}
proxy-groups:
  - {name: 🚀 默认代理, type: select, proxies: [♻️ 香港自动, ♻️ 日本自动, ♻️ 美国自动, ♻️ 新加坡自动, ♻️ 其他节点自动, ♻️ 自动选择, 🇭🇰 香港节点, 🇯🇵 日本节点, 🇺🇲 美国节点, 🌐 全部节点, 🐸 手动切换, 🔯 香港故转, 🔯 日本故转, 🔯 加坡故转, 直连, DIRECT, REJECT]}
  - {name: 🌍 Duckduckgo, <<: *pr}
  - {name: 🎞️ 哔哩哔哩, <<: *pr}
  - {name: 👨🏿‍💻 GitHub, <<: *pr}
  - {name: 📲 Telegram, <<: *pr}
  - {name: 📲 Twitter, <<: *pr}
  - {name: Ⓜ️ 微软服务, <<: *pr}
  - {name: 🍀 Google, <<: *pr}
  - {name: 📹 YouTube, <<: *pr}
  - {name: 🤖 ChatGPT, <<: *pr}
  - {name: 🎯 直连, type: select, proxies: [直连, 🚀 默认代理]}
  - {name: 🐟 漏网之鱼, <<: *pr}
  - {name: 🐸 手动切换, type: select, include-all: true, filter: ".*"}
  - {name: 🇭🇰 香港节点, type: select, include-all: true, filter: "(?i)港|hk|hongkong|hong kong"}
  - {name: 🇯🇵 日本节点, type: select, include-all: true, filter: "(?i)日|jp|japan"}
  - {name: 🇺🇲 美国节点, type: select, include-all: true, filter: "(?i)美|us|unitedstates|united states"}
  - {name: 🔯 香港故转, type: select, include-all: true, filter: "(?=.*(香港|HK|Hong Kong|🇭🇰|HongKong))^((?!(深港|家宽|游戏|剩余|流量|0.5|0.5倍|0.5x|2.0|2倍|2x|3.0|3倍|3x|4.0|4倍|4x|5.0|5倍|5x)).)"}
  - {name: 🔯 日本故转, type: select, include-all: true, filter: "(?=.*(日本|川日|东京|大阪|泉日|埼玉|沪日|深日|JP|Japan))^((?!(深港|家宽|游戏|剩余|流量|0.5|0.5倍|0.5x|2.0|2倍|2x|3.0|3倍|3x|4.0|4倍|4x|5.0|5倍|5x)).)"}
  - {name: 🔯 加坡故转, type: select, include-all: true, filter: "(?=.*(新加坡|坡|狮城|SG|Singapore))^((?!(家宽|游戏|剩余|流量|0.5|0.5倍|0.5x|2.0|2倍|2x|3.0|3倍|3x|4.0|4倍|4x|5.0|5倍|5x)).)"}
  - {name: ♻️ 香港自动, type: url-test, include-all: true, tolerance: 10, interval: 100, filter: "(?=.*(港|HK|(?i)Hong))^((?!(台|日|韩|新|深|美)).)*$"}
  - {name: ♻️ 日本自动, type: url-test, include-all: true, tolerance: 10, interval: 100, filter: "(?=.*(日|JP|(?i)Japan))^((?!(港|台|韩|新|美)).)*$" }
  - {name: ♻️ 美国自动, type: url-test, include-all: true, tolerance: 10, interval: 100, filter: "(?=.*(美|US|(?i)States|America))^((?!(港|台|日|韩|新)).)*$"}
  - {name: ♻️ 新加坡自动, type: url-test, include-all: true, tolerance: 10, interval: 100, filter: "(?=.*(新加坡|坡|狮城|SG|Singapore))^((?!(港|台|日|韩|美)).)*$"}
  - {name: ♻️ 其他节点自动, type: url-test, include-all: true, tolerance: 10, interval: 100, filter: "^((?!(直连|新加坡|坡|狮城|SG|Singapore|美|US|(?i)States|America|日|JP|(?i)Japan|港|HK|(?i)Hong)).)*$"}
  - {name: ♻️ 自动选择, type: url-test, include-all: true, tolerance: 10, interval: 100, filter: "^((?!(直连)).)*$"}
  - {name: 🌐 全部节点, type: select, include-all: true}


rules:
  - DOMAIN-SUFFIX,qichiyu.com,♻️ 其他节点自动
  - RULE-SET,private_domain,直连
  - RULE-SET,zhilian1_domain,直连
  - RULE-SET,zhilian_domain,直连
  - RULE-SET,zhilian2_domain,直连
  - RULE-SET,zhilian3_domain,直连
  - RULE-SET,zhilian4_domain,直连
  - RULE-SET,zhilian5_domain,直连
  - RULE-SET,zhilian6_domain,直连
  - RULE-SET,zhilian7_domain,直连
  - RULE-SET,zhilian8_domain,直连
  - RULE-SET,zhilian9_domain,直连
  - RULE-SET,zhilian11_domain,直连
  - RULE-SET,zhilian12_domain,直连
  - RULE-SET,zhilian13_domain,直连
  - RULE-SET,zhilian14_domain,直连
  - RULE-SET,zhilian15_domain,直连
  - RULE-SET,zhilian16_domain,直连
  - RULE-SET,zhilian17_domain,直连
  - RULE-SET,zhilian18_domain,直连
  - RULE-SET,apple_domain,直连
  - RULE-SET,ai,🤖 ChatGPT
  - RULE-SET,ai1,🤖 ChatGPT
  - RULE-SET,ai2,🤖 ChatGPT
  - RULE-SET,ai3,🤖 ChatGPT
  - RULE-SET,Duckduckgo_domain,🌍 Duckduckgo
  - RULE-SET,github_domain,👨🏿‍💻 GitHub
  - RULE-SET,bilibili_domain,🎞️ 哔哩哔哩
  - RULE-SET,bilibili1_domain,🎞️ 哔哩哔哩
  - RULE-SET,telegram_domain,📲 Telegram
  - RULE-SET,Twitter_domain,📲 Twitter
  - RULE-SET,youtube_domain,📹 YouTube
  - RULE-SET,youtubemusic_domain,📹 YouTube
  - RULE-SET,Bing_domain,Ⓜ️ 微软服务
  - RULE-SET,OneDrive_domain,Ⓜ️ 微软服务
  - RULE-SET,Microsoft_domain,Ⓜ️ 微软服务
  - RULE-SET,google_domain,🍀 Google
  - RULE-SET,speedtest_domain,🚀 默认代理
  - RULE-SET,gfw_domain,🍀 Google
  - RULE-SET,geolocation-!cn,🚀 默认代理
  - RULE-SET,cn_domain,🎯 直连
  - RULE-SET,ChinaMedia_domain,🎯 直连
  - RULE-SET,google_ip,🍀 Google,no-resolve
  - RULE-SET,telegram_ip,📲 Telegram,no-resolve
  - RULE-SET,cn_ip,🎯 直连,no-resolve
  - MATCH,🐟 漏网之鱼

# 规则集
rule-anchor:
  ip: &ip {type: http, interval: 86400, behavior: ipcidr, format: mrs}
  domain: &domain {type: http, interval: 86400, behavior: domain, format: mrs}
  class: &class {type: http, interval: 86400, behavior: classical, format: text}
rule-providers: 
  ai: { <<: *domain, url: "https://github.com/MetaCubeX/meta-rules-dat/raw/refs/heads/meta/geo/geosite/category-ai-chat-!cn.mrs" }
  ai1: { <<: *class, url: "https://raw.githubusercontent.com/ACL4SSR/ACL4SSR/master/Clash/Ruleset/OpenAi.list"}
  ai2: { <<: *class, url: "https://raw.githubusercontent.com/anzcoffeetime/clash/main/AI.list"}
  ai3: { <<: *class, url: "https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/refs/heads/master/rule/Clash/OpenAI/OpenAI_No_Resolve.yaml"}
  Duckduckgo_domain: { <<: *class, url: "https://cdn.jsdelivr.net/gh/blackmatrix7/ios_rule_script@master/rule/Clash/Duckduckgo/Duckduckgo.yaml"}
  private_domain: { <<: *domain, url: "https://raw.githubusercontent.com/MetaCubeX/meta-rules-dat/meta/geo/geosite/private.mrs"}
  zhilian_domain: { <<: *class, url: "https://raw.githubusercontent.com/anzcoffeetime/clash/refs/heads/main/zhilian.list"}
  zhilian1_domain: { <<: *class, url: "https://raw.githubusercontent.com/ACL4SSR/ACL4SSR/master/Clash/LocalAreaNetwork.list"}
  zhilian2_domain: { <<: *class, url: "https://raw.githubusercontent.com/ACL4SSR/ACL4SSR/master/Clash/UnBan.list"}
  zhilian3_domain: { <<: *class, url: "https://raw.githubusercontent.com/ACL4SSR/ACL4SSR/refs/heads/master/Clash/Ruleset/Wechat.list"}
  zhilian4_domain: { <<: *class, url: "https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/QuantumultX/DingTalk/DingTalk.list"}
  zhilian5_domain: { <<: *class, url: "https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/QuantumultX/LanZouYun/LanZouYun.list"}
  zhilian6_domain: { <<: *class, url: "https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/QuantumultX/iFlytek/iFlytek.list"}
  zhilian7_domain: { <<: *class, url: "https://raw.githubusercontent.com/ACL4SSR/ACL4SSR/master/Clash/Ruleset/Youku.list"}
  zhilian8_domain: { <<: *class, url: "https://raw.githubusercontent.com/ACL4SSR/ACL4SSR/refs/heads/master/Clash/ChinaMedia.list"}
  zhilian9_domain: { <<: *class, url: "https://raw.githubusercontent.com/ACL4SSR/ACL4SSR/refs/heads/master/Clash/Download.list"}
  zhilian11_domain: { <<: *class, url: "https://raw.githubusercontent.com/LM-Firefly/Rules/master/Domestic-Services/Xiaomi.list"}
  zhilian12_domain: { <<: *class, url: "https://raw.githubusercontent.com/LM-Firefly/Rules/master/Domestic-Services/Tencent.list"}
  zhilian13_domain: { <<: *class, url: "https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/refs/heads/master/rule/Clash/Tencent/Tencent.list"}
  zhilian14_domain: { <<: *class, url: "https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/refs/heads/master/rule/Clash/Eleme/Eleme.list"}
  zhilian15_domain: { <<: *class, url: "https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/refs/heads/master/rule/Clash/ChinaMobile/ChinaMobile.list"}
  zhilian16_domain: { <<: *class, url: "https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/refs/heads/master/rule/Clash/ChinaTelecom/ChinaTelecom.list"}
  zhilian17_domain: { <<: *class, url: "https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/refs/heads/master/rule/Clash/AliPay/AliPay.list"}
  zhilian18_domain: { <<: *class, url: "https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/refs/heads/master/rule/Clash/DouYin/DouYin.list"}
  Twitter_domain: { <<: *class, url: "https://raw.githubusercontent.com/LM-Firefly/Rules/master/PROXY/Twitter.list"}
  github_domain: { <<: *domain, url: "https://raw.githubusercontent.com/MetaCubeX/meta-rules-dat/meta/geo/geosite/github.mrs"}
  bilibili_domain: { <<: *class, url: "https://raw.githubusercontent.com/ACL4SSR/ACL4SSR/master/Clash/Ruleset/BilibiliHMT.list"}
  bilibili1_domain: { <<: *class, url: "https://raw.githubusercontent.com/ACL4SSR/ACL4SSR/master/Clash/Ruleset/Bilibili.list"}
  youtube_domain: { <<: *domain, url: "https://raw.githubusercontent.com/MetaCubeX/meta-rules-dat/meta/geo/geosite/youtube.mrs"}
  youtubemusic_domain: { <<: *class, url: "https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/Clash/YouTubeMusic/YouTubeMusic.yaml"}
  Bing_domain: { <<: *class, url: "https://raw.githubusercontent.com/ACL4SSR/ACL4SSR/master/Clash/Bing.list"}
  OneDrive_domain: { <<: *class, url: "https://raw.githubusercontent.com/ACL4SSR/ACL4SSR/master/Clash/OneDrive.list"}
  Microsoft_domain: { <<: *class, url: "https://raw.githubusercontent.com/ACL4SSR/ACL4SSR/master/Clash/Microsoft.list"}
  google_domain: { <<: *domain, url: "https://raw.githubusercontent.com/MetaCubeX/meta-rules-dat/meta/geo/geosite/google.mrs"}
  telegram_domain: { <<: *domain, url: "https://raw.githubusercontent.com/MetaCubeX/meta-rules-dat/meta/geo/geosite/telegram.mrs"}
  apple_domain: { <<: *domain, url: "https://raw.githubusercontent.com/MetaCubeX/meta-rules-dat/meta/geo/geosite/apple-cn.mrs"}
  speedtest_domain: { <<: *domain, url: "https://raw.githubusercontent.com/MetaCubeX/meta-rules-dat/meta/geo/geosite/ookla-speedtest.mrs"}
  gfw_domain: { <<: *domain, url: "https://raw.githubusercontent.com/MetaCubeX/meta-rules-dat/meta/geo/geosite/gfw.mrs"}
  geolocation-!cn: { <<: *domain, url: "https://raw.githubusercontent.com/MetaCubeX/meta-rules-dat/meta/geo/geosite/geolocation-!cn.mrs"}
  cn_domain: { <<: *domain, url: "https://raw.githubusercontent.com/MetaCubeX/meta-rules-dat/meta/geo/geosite/cn.mrs"}
  ChinaMedia_domain: { <<: *class, url: "https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/Clash/ChinaMedia/ChinaMedia.list"}
  
  cn_ip: { <<: *ip, url: "https://raw.githubusercontent.com/MetaCubeX/meta-rules-dat/meta/geo/geoip/cn.mrs"}
  google_ip: { <<: *ip, url: "https://raw.githubusercontent.com/MetaCubeX/meta-rules-dat/meta/geo/geoip/google.mrs"}
  telegram_ip: { <<: *ip, url: "https://raw.githubusercontent.com/MetaCubeX/meta-rules-dat/meta/geo/geoip/telegram.mrs"}